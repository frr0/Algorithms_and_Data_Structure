--- TEX
Given the following array of increasing integer values, use a binary search to look-for the value 45. 
--- DAT
 0  6  8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
--- SOL
### Linear and binary search
Linear search on unordered array
(searching value 45 on 17 elements)
 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 
---------------------------------------------------
 0  6  8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
 0  6  8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
    6  8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
       8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
         15 16 20 20 24 25 28 30 34 36 40 41 45 50 
            16 20 20 24 25 28 30 34 36 40 41 45 50 
               20 20 24 25 28 30 34 36 40 41 45 50 
                  20 24 25 28 30 34 36 40 41 45 50 
                     24 25 28 30 34 36 40 41 45 50 
                        25 28 30 34 36 40 41 45 50 
                           28 30 34 36 40 41 45 50 
                              30 34 36 40 41 45 50 
                                 34 36 40 41 45 50 
                                    36 40 41 45 50 
                                       40 41 45 50 
                                          41 45 50 
                                             45 50 
Number 45 found in position 15.
Binary search on ORDERED array
(searching value 45 on 17 elements)
 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 
---------------------------------------------------
 0  6  8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
 0  6  8 15 16 20 20 24 25 28 30 34 36 40 41 45 50 
                           28 30 34 36 40 41 45 50 
                                       40 41 45 50 
                                             45 50 
Number 45 found in position 15.
--- QUERY
.query Report the sequence of all values visited by the procedure (included the one searched, if it is found). Please, indicate the response as a sequence of integer values separated by a single space (e.g., 23 32 47). No other symbols must be included in the response.
--- RES
.res 25 36 41 45
--- END

---
---
---

--- TEX
Given the following C code function:
--- DAT
void sort (int **m, int R, int C) {
  int i, j, k, t;
  for (i=0; i<R; i++) {
    for (j=0; j<C-1; j++) {
      for (k=0; k<C-j-1; k++) {
	     if (m[i][j]>m[i][j+1]) {
	       t = m[i][j]; m[i][j] = m[i][j+1]; m[i][j+1] = t;
        }
      }
    }
  }
return;
}
--- SOL
--- QUERY
.query Evaluate its complexity in terms of number of total operations. Please, report all intermediate computational steps required to reach the result. Moreover, clearly state the final asymptotic complexity of the algorithm. Appropriately motivare computational steps and results. Notice that this is an open question, and it will be maually evaluated.
--- RES
.res

--- END

---
---
---

--- TEX
The following sequence of pairs is given. Each relation i-j means that node i is adjacent to node j. Node names are integer values within the range from 0 to 9.
--- DAT
3-1 4-2 3-6 0-5 3-9 6-9 6-0 
--- SOL
### quick find
       0  1  2  3  4  5  6  7  8  9 
------------------------------------
       0  1  2  3  4  5  6  7  8  9 
 3- 1 {nodes [3] go below node [1]}
       0  1  2  1  4  5  6  7  8  9 
 4- 2 {nodes [4] go below node [2]}
       0  1  2  1  2  5  6  7  8  9 
 3- 6 {nodes [1,3] go below node [6]}
       0  6  2  6  2  5  6  7  8  9 
 0- 5 {nodes [0] go below node [5]}
       5  6  2  6  2  5  6  7  8  9 
 3- 9 {nodes [1,3,6] go below node [9]}
       5  9  2  9  2  5  9  7  8  9 
 6- 9 No change
       5  9  2  9  2  5  9  7  8  9 
 6- 0 {nodes [1,3,6,9] go below node [5]}
       5  5  2  5  2  5  5  7  8  5 
--- QUERY
.query Apply an online connectivity algorithm based on quick-find. Please, show the content of the array at the end of the entire process as a sequence of integer values separated by a single space. No other symbols must be included in the response. This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res 5 5 2 5 2 5 5 7 8 5
--- END

---
---
---

--- TEX
The following sequence of pairs is given. Each relation i-j means that node i is adjacent to node j. Node names are integer values within the range from 0 to 9.
--- DAT
3-1 4-1 1-6 0-4 3-9 6-9 5-0 
--- SOL
### quick union
                         0  1  2  3  4  5  6  7  8  9 
------------------------------------------------------
                         0  1  2  3  4  5  6  7  8  9 
 3- 1 {[ 3]below[ 1]}    0  1  2  1  4  5  6  7  8  9 
 4- 1 {[ 4]below[ 1]}    0  1  2  1  1  5  6  7  8  9 
 1- 6 {[ 1]below[ 6]}    0  6  2  1  1  5  6  7  8  9 
 0- 4 {[ 0]below[ 4]}    6  6  2  1  1  5  6  7  8  9 
 3- 9 {[ 6]below[ 9]}    6  6  2  1  1  5  9  7  8  9 
 6- 9 No change          6  6  2  1  1  5  9  7  8  9 
 5- 0 {[ 5]below[ 0]}    6  6  2  1  1  9  9  7  8  9 
--- QUERY
.query Apply an online connectivity algorithm based on quick-union. Please, show the content of the array at the end of the entire process as a sequence of integer values separated by a single space. No other symbols must be included in the response.  This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res 6 6 2 1 1 9 9 7 8 9
--- END

---
---
---

--- TEX
The following sequence of pairs is given. Each relation i-j means that node i is adjacent to node j. Node names are integer values within the range from 0 to 9.
--- DAT
3-1 4-1 2-6 9-8 7-6 6-9 5-0 
--- SOL
### quick weighted union
                         0  1  2  3  4  5  6  7  8  9 
------------------------------------------------------
                         0  1  2  3  4  5  6  7  8  9 
 3- 1 {[ 1]below[ 3]}    0  3  2  3  4  5  6  7  8  9 
 4- 1 {[ 4]below[ 3]}    0  3  2  3  3  5  6  7  8  9 
 2- 6 {[ 6]below[ 2]}    0  3  2  3  3  5  2  7  8  9 
 9- 8 {[ 8]below[ 9]}    0  3  2  3  3  5  2  7  9  9 
 7- 6 {[ 7]below[ 2]}    0  3  2  3  3  5  2  2  9  9 
 6- 9 {[ 9]below[ 2]}    0  3  2  3  3  5  2  2  9  2 
 5- 0 {[ 0]below[ 5]}    5  3  2  3  3  5  2  2  9  2 
--- QUERY
.query Apply an online connectivity algorithm based on weighted quick-union. Please, show the content of the array at the end of the entire process as a sequence of integer values separated by a single space. No other symbols must be included in the response. This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res 5 3 2 3 3 5 2 2 9 2
--- END

---
---
---

--- TEX
Given the following array of integer values, sort it in ascending order using the insertion sort procedure.
--- DAT
10  4  8 -11  5  3  1  7  4  3  2 12 15 
--- SOL
### Insertion sort
    0  1  2  3  4  5  6  7  8  9 10 11 12 
V: 10  4  8 -11  5  3  1  7  4  3  2 12 15 
------------------------------------------
V:  4 10                                  
V:  4  8 10                               
V: -11  4  8 10                            
V: -11  4  5  8 10                         
V: -11  3  4  5  8 10                      
V: -11  1  3  4  5  8 10                   
V: -11  1  3  4  5  7  8 10                
V: -11  1  3  4  4  5  7  8 10             
V: -11  1  3  3  4  4  5  7  8 10          
V: -11  1  2  3  3  4  4  5  7  8 10       
V: -11  1  2  3  3  4  4  5  7  8 10 12    
V: -11  1  2  3  3  4  4  5  7  8 10 12 15 
--- QUERY
.query Display the content of the array just after 6 iterations of the main (outer) loop (i.e., before iteration number 7). Please, show the entire content of the array as a sequence of integer values separated by a single space. No other symbols must be included in the response. This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res -11  1  3  4  5  8 10 7 4 3 2 12 15
--- END

---
---
---

--- TEX
Given the following array of integer values, sort it in descending order using the selection sort procedure.
--- DAT
 1  4  8 -11  5  3  1  7  4  3  2 12 15 
--- SOL
### Selection sort
    0  1  2  3  4  5  6  7  8  9 10 11 12 
V:  1  4  8 -11  5  3  1  7  4  3  2 12 15 
------------------------------------------
V: 15  4  8 -11  5  3  1  7  4  3  2 12  1 
V: 15 12  8 -11  5  3  1  7  4  3  2  4  1 
V: 15 12  8 -11  5  3  1  7  4  3  2  4  1 
V: 15 12  8  7  5  3  1 -11  4  3  2  4  1 
V: 15 12  8  7  5  3  1 -11  4  3  2  4  1 
V: 15 12  8  7  5  4  1 -11  3  3  2  4  1 
V: 15 12  8  7  5  4  4 -11  3  3  2  1  1 
V: 15 12  8  7  5  4  4  3 -11  3  2  1  1 
V: 15 12  8  7  5  4  4  3  3 -11  2  1  1 
V: 15 12  8  7  5  4  4  3  3  2 -11  1  1 
V: 15 12  8  7  5  4  4  3  3  2  1 -11  1 
V: 15 12  8  7  5  4  4  3  3  2  1  1 -11 
--- QUERY
.query Display the content of the array just after 6 iterations of the main (outer) loop (i.e., before iteration number 7). Please, show the entire content of the array as a sequence of integer values separated by a single space. No other symbols must be included in the response. This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res 15 12  8  7  5  4  1 -11  3  3  2  4  1
--- END

---
---
---

--- TEX
Given the following array of integer values, sort it in ascending order using the exchange sort procedure. Suppose that within this procedure, the main (outer) loop moves the higher value of the unordered array into its rightmost element.
--- DAT
15  9 18 11 -2  5  3  1  7  4  3  2  5 
--- SOL
### Exchange sort
    0  1  2  3  4  5  6  7  8  9 10 11 12 
V: 15  9 18 11 -2  5  3  1  7  4  3  2  5 
------------------------------------------
V:  9 15 11 -2  5  3  1  7  4  3  2  5 18 
V:  9 11 -2  5  3  1  7  4  3  2  5 15 18 
V:  9 -2  5  3  1  7  4  3  2  5 11 15 18 
V: -2  5  3  1  7  4  3  2  5  9 11 15 18 
V: -2  3  1  5  4  3  2  5  7  9 11 15 18 
V: -2  1  3  4  3  2  5  5  7  9 11 15 18 
V: -2  1  3  3  2  4  5  5  7  9 11 15 18 
V: -2  1  3  2  3  4  5  5  7  9 11 15 18 
V: -2  1  2  3  3  4  5  5  7  9 11 15 18 
V: -2  1  2  3  3  4  5  5  7  9 11 15 18 
V: -2  1  2  3  3  4  5  5  7  9 11 15 18 
V: -2  1  2  3  3  4  5  5  7  9 11 15 18 
--- QUERY
.query Display the content of the array just after 6 iterations of the main (outer) loop (i.e., before iteration number 7). Please, show the entire content of the array as a sequence of integer values separated by a single space. No other symbols must be included in the response. This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res -2  1  3  4  3  2  5  5  7  9 11 15 18
--- END

---
---
---

--- TEX
Given the following array of integer values, sort it in ascending order using the shell sort procedure.
Use the Knuth's sequence h = 3h + 1, i.e., 1, 4, 13, etc.
--- DAT
13  9 18 11 -2  5  3  1  7  4 18  3  2 21  5 
--- SOL
### Shell sort
    0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 
V: 13  9 18 11 -2  5  3  1  7  4 18  3  2 21  5 
------------------------------------------------
h =  13  .......................................
V: 13  9 18 11 -2  5  3  1  7  4 18  3  2 21  5 
V: 13  5 18 11 -2  5  3  1  7  4 18  3  2 21  9 
h =   4  .......................................
V: -2  5 18 11 13  5  3  1  7  4 18  3  2 21  9 
V: -2  5 18 11 13  5  3  1  7  4 18  3  2 21  9 
V: -2  5  3 11 13  5 18  1  7  4 18  3  2 21  9 
V: -2  5  3  1 13  5 18 11  7  4 18  3  2 21  9 
V: -2  5  3  1  7  5 18 11 13  4 18  3  2 21  9 
V: -2  4  3  1  7  5 18 11 13  5 18  3  2 21  9 
V: -2  4  3  1  7  5 18 11 13  5 18  3  2 21  9 
V: -2  4  3  1  7  5 18  3 13  5 18 11  2 21  9 
V: -2  4  3  1  2  5 18  3  7  5 18 11 13 21  9 
V: -2  4  3  1  2  5 18  3  7  5 18 11 13 21  9 
V: -2  4  3  1  2  5  9  3  7  5 18 11 13 21 18 
h =   1  .......................................
V: -2  4                                        
V: -2  3  4                                     
V: -2  1  3  4                                  
V: -2  1  2  3  4                               
V: -2  1  2  3  4  5                            
V: -2  1  2  3  4  5  9                         
V: -2  1  2  3  3  4  5  9                      
V: -2  1  2  3  3  4  5  7  9                   
V: -2  1  2  3  3  4  5  5  7  9                
V: -2  1  2  3  3  4  5  5  7  9 18             
V: -2  1  2  3  3  4  5  5  7  9 11 18          
V: -2  1  2  3  3  4  5  5  7  9 11 13 18       
V: -2  1  2  3  3  4  5  5  7  9 11 13 18 21    
V: -2  1  2  3  3  4  5  5  7  9 11 13 18 18 21 
--- QUERY
.query Display the content of the array just before the main (outer) loop iteration with h=1. Please, show the entire content of the array as a sequence of integer values separated by a single space. No other symbols must be included in the response. This is an example of the response: 0 3 0 6 8 etc.
--- RES
.res -2  4  3  1  2  5  9  3  7  5 18 11 13 21 18
--- END

---
---
---

--- TEX
Given the following array of integer values, sort it in ascending order using the counting sort procedure.
--- DAT
 3  9  8 11  2  5  3 10  7  4  8  3  2 11  5 
--- SOL
### Counting sort
C : 0  1  2  3  4  5  6  7  8  9 10 11  -- A: 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 
------------------------------------------------------------------------------------------
                                        -- A: 3  9  8 11  2  5  3 10  7  4  8  3  2 11  5 

C1: 0  0  0  0  0  0  0  0  0  0  0  0 
C2: 0  0  2  3  1  2  0  1  2  1  1  2 
C3: 0  0  2  5  6  8  8  9 11 12 13 15 

C3: 0  0  2  5  6  7  8  9 11 12 13 15  -- B: 0  0  0  0  0  0  0  5  0  0  0  0  0  0  0 
C3: 0  0  2  5  6  7  8  9 11 12 13 14  -- B: 0  0  0  0  0  0  0  5  0  0  0  0  0  0 11 
C3: 0  0  1  5  6  7  8  9 11 12 13 14  -- B: 0  2  0  0  0  0  0  5  0  0  0  0  0  0 11 
C3: 0  0  1  4  6  7  8  9 11 12 13 14  -- B: 0  2  0  0  3  0  0  5  0  0  0  0  0  0 11 
C3: 0  0  1  4  6  7  8  9 10 12 13 14  -- B: 0  2  0  0  3  0  0  5  0  0  8  0  0  0 11 
C3: 0  0  1  4  5  7  8  9 10 12 13 14  -- B: 0  2  0  0  3  4  0  5  0  0  8  0  0  0 11 
C3: 0  0  1  4  5  7  8  8 10 12 13 14  -- B: 0  2  0  0  3  4  0  5  7  0  8  0  0  0 11 
C3: 0  0  1  4  5  7  8  8 10 12 12 14  -- B: 0  2  0  0  3  4  0  5  7  0  8  0 10  0 11 
C3: 0  0  1  3  5  7  8  8 10 12 12 14  -- B: 0  2  0  3  3  4  0  5  7  0  8  0 10  0 11 
C3: 0  0  1  3  5  6  8  8 10 12 12 14  -- B: 0  2  0  3  3  4  5  5  7  0  8  0 10  0 11 
C3: 0  0  0  3  5  6  8  8 10 12 12 14  -- B: 2  2  0  3  3  4  5  5  7  0  8  0 10  0 11 
C3: 0  0  0  3  5  6  8  8 10 12 12 13  -- B: 2  2  0  3  3  4  5  5  7  0  8  0 10 11 11 
C3: 0  0  0  3  5  6  8  8  9 12 12 13  -- B: 2  2  0  3  3  4  5  5  7  8  8  0 10 11 11 
C3: 0  0  0  3  5  6  8  8  9 11 12 13  -- B: 2  2  0  3  3  4  5  5  7  8  8  9 10 11 11 
C3: 0  0  0  2  5  6  8  8  9 11 12 13  -- B: 2  2  3  3  3  4  5  5  7  8  8  9 10 11 11 

                                        -- A: 2  2  3  3  3  4  5  5  7  8  8  9 10 11 11 
--- QUERY
.query Which is the value of element C[3] at the end of the sorting process (that is, once the original array have been completely sorted)? Please, report a single integer value. No other symbols must be included in the response.
--- RES
.res 2
--- END
